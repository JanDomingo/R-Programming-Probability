x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1)
for (i in 1:n) {
x = c(x, ((43210*x[i])%%(2^27))) #Linear Congruential Method except with custom a, b, and m values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((43210*x[i])%%(2^27))) #Linear Congruential Method except with custom a, b, and m values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((25000*x[i])%%(2^29))) #Linear Congruential Method except with custom a, b, and m values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((16807*x[i])%%(2^31-1))) #Linear Congruential Method except with custom a(25000), b(0), and m(2^29) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((20000*x[i])%%(2^29-1))) #Linear Congruential Method except with custom a(25000), b(0), and m(2^29) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
x = c(x, ((20000*x[i])%%(2^29-1))) #Linear Congruential Method except with custom a(20000), b(0), and m(2^29) values
for (i in 1:n) {
x = c(x, ((20000*x[i])%%(2^29-1))) #Linear Congruential Method except with custom a(20000), b(0), and m(2^29) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^31-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((20000*x[i])%%(2^29-1))) #Linear Congruential Method except with custom a(20000), b(0), and m(2^29) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^29-1)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
library(knitr)
stitch("FinalLab.R")
stitch(script="FinalLab.R", system.file("misc", "knitr-template.Rhtml", package="knitr"))
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, (((36000*x[i])+100)%%(2^35))) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^35)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
for (i in 1:n) {
x = c(x, (((36000*x[i])+100)%%(2^40))) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^35)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, (((36000*x[i])+100)%%(2^40))) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^35)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((34895*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^35)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((33000*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^35)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((33000*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
for (i in 1:n) {
x = c(x, ((42000*x[i])+100)%%(2^30)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((42000*x[i])+100)%%(2^30)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^30)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
x1_v = vector()
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((42000*x[i])+100)%%(2^30)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^30)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((34895*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^30)  #Transfrom uniform variates between 0 and 1
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((34895*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((32650*x[i])+100)%%(2^39)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((32650*x[i])+100)%%(2^39)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^39)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
for (i in 1:n) {
x = c(x, ((34895*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((34895*x[i])+100)%%(2^40)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^40)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^32)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^32)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^32)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^32)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
x1_v = vector()
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^33)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^33)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
x1_v = vector()
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^30)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^30)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^29)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^29)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^28)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^28)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((18650*x[i])+100)%%(2^34)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^34)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((17500*x[i])+100)%%(2^30)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^30)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((17500*x[i])+100)%%(2^29)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^29)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((31425*x[i])+100)%%(2^29)) #Linear Congruential Method except with custom a(36000), b(100), and m(2^35) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^29)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
x1_v = vector()
#3
n = 10000 #number of variates
x = 1     #seed value
for (i in 1:n) {
x = c(x, ((31425*x[i])+100)%%(2^29)) #Linear Congruential Method except with custom a(31425), b(100), and m(2^29) values
}
x = x[2:(n+1)]  #Disregards seed value, keeps the other 10000 from for loop
x
u = x/(2^29)  #Transfrom uniform variates between 0 and 1
#(a) Plot a histogram of your variates
par(mfrow = c(2,1)) #2 rows, 1 column for the graph matrix
hist(u, main ="", xlab="RANDU variiates", ylab="Frequencies") #Histogram of the n RANDU variates
#(b) Draw the empirical CDF of oyur variates against the true CDF of a uniform distribution
plot.ecdf(u, verticals = TRUE, do.p = FALSE, xlab = "u", ylab = "ECDF")
abline(0,1, col="red")
#(c)
ks.test(u, "punif", 0, 1) #Komolgorov-smirnov test of RANDU variates against U(0,1)
x1_v = vector()
